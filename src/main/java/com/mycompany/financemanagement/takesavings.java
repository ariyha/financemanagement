/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.financemanagement;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author sreeshanth
 */
public class takesavings extends javax.swing.JFrame {
    
    int amount,bal;
    String line;

    /**
     * Creates new form takesavings
     */
    public takesavings(String line) {
        this.line=line;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("AMOUNT TO WITHDRAW:");

        jButton1.setText("WITHDRAW");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(401, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(124, 124, 124))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(165, 165, 165))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jButton1)
                .addContainerGap(154, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
       String temp = jTextField1.getText();
       try{
           amount = Integer.parseInt(temp);
       }
       catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null,"Enter a valid amount","title",JOptionPane.WARNING_MESSAGE);
            return;
       }
       
       getbal();  
       if(amount>bal || amount<0){
           JOptionPane.showMessageDialog(null,"Insufficient amount in savings","title",JOptionPane.WARNING_MESSAGE);
           return;
       }
       
       writedataout();
       writedatain();
       JOptionPane.showMessageDialog(null,"Withdrew from savings","title",JOptionPane.WARNING_MESSAGE);
       
       this.dispose();
        try {
            new mainpage(line).setVisible(true);
        } catch (IOException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        }
       
       
       
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(takesavings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(takesavings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(takesavings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(takesavings.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new takesavings("ijiod").setVisible(true);
            }
        });
    }
    
    public void writedataout(){
        
        FileWriter writer2 = null;
        try {
            bal = bal - amount;
            writer2 = new FileWriter("users\\"+line.split(",")[1]+"savings.csv",true);
            LocalDateTime timenow = LocalDateTime.now();
            DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
            String formattedDate = timenow.format(myFormatObj);
            String[] arrOfStr = formattedDate.split(" ", 2);
            writer2.write(arrOfStr[0]+","+arrOfStr[1]+","+amount+",1,"+bal+"\n");
            writer2.close();
        } catch (IOException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                writer2.close();
            } catch (IOException ex) {
                Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        

    }
    public void getbal(){
        try {
            FileReader reader = new FileReader("users\\"+line.split(",")[1]+"savings.csv");
            BufferedReader bufread = new BufferedReader(reader);
            
            bufread.readLine();
            String line2;
            
            while((line2=bufread.readLine())!=null){
                bal = Integer.parseInt(line2.split(",")[4]);
            }
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    public void writedatain(){
        FileReader reader = null;
        try {
            int balance=0;
            reader = new FileReader("users\\"+line.split(",")[1]+"transactions.csv");
            BufferedReader bufread = new BufferedReader(reader);
            bufread.readLine();
            String line2;
            while((line2=bufread.readLine())!=null){
                balance = Integer.parseInt(line2.split(",")[4]);
            }
            reader.close();
            
            balance= balance +amount;
            
            FileWriter writer = new FileWriter("users\\"+line.split(",")[1]+"transactions.csv",true);
            LocalDateTime timenow = LocalDateTime.now();
            DateTimeFormatter myFormatObj = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
            String formattedDate = timenow.format(myFormatObj);
            String[] arrOfStr = formattedDate.split(" ", 2);
            writer.write(arrOfStr[0]+","+arrOfStr[1]+","+amount+",0,"+balance+",savings\n");
            writer.close();     
        
        } catch (FileNotFoundException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                reader.close();
            } catch (IOException ex) {
                Logger.getLogger(takesavings.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
